# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'.source.js':
  'React Component':
    'prefix': 'comp'
    'body': """
      import React, { PropTypes } from 'react';

      function $1(props) {
          return (
              <div>
                  {props.children}
              </div>
          );
      }

      $1.propTypes = {
          children: PropTypes.node
      };

      export default $1;

    """

  'Flow React Component':
    'prefix': 'fcomp'
    'body': """
      // @flow

      import React from 'react';

      import styles from './$1.css';

      type PropType = {
          children?: any
      };

      function $1(props: PropType): React.Element<*> {
          return (
              <div className={styles.root}>
                  {props.children}
              </div>
          );
      }

      export default $1;

    """

  'React Component index.js':
    'prefix': 'ind'
    'body': """
      import $1 from './$1';
      export default $1;

    """

  'Flow React Component index.js':
    'prefix': 'find'
    'body': """
      // @flow

      import $1 from './$1';
      export default $1;

    """

  'React Storybook story':
    'prefix': 'story'
    'body': """
      import React from 'react';
      import { action, storiesOf } from '@kadira/storybook';

      import $1 from './$1';

      storiesOf('$1', module)
          .add('default', () => (
              <$1 />
          ));

    """

  'Flow React Storybook story':
    'prefix': 'fstory'
    'body': """
      // @flow

      import React from 'react';
      import { action, storiesOf } from 'storybook';

      import $1 from './$1';

      storiesOf('$1', module)
          .add('default', (): React.Element<*> => (
              <$1 />
          ));

    """
  'Unit test':
    'prefix': 'test'
    'body': """
      import $1 from './$1';

      describe('$1', () => {
          it('should return true', () => {
              expect($1(), 'to be', true);
          });
      });

    """

  'Component Unit test':
    'prefix': 'ctest'
    'body': """
      import React from 'react';

      import { shallow } from 'utils/test/render';
      import $1 from './$1';

      describe('$1', () => {
          it('should render', () => {
              const component = shallow(<$1 />);

              return expect(component, 'to have rendered',
                  <div />
              );
          });
      });

    """

'.source.css':
  'Component CSS':
    'prefix': 'comp'
    'body': """
      @import 'variables';

      /* ============================================================================
       * Root component
       * ============================================================================ */
      .root {

      }

    """
